{"version":3,"sources":["components/PageHeader/index.js","utils/RandomUser.js","components/SortIcon/index.js","components/TableHeader/index.js","components/TableRow/index.js","components/Table/index.js","components/Search/index.js","App.js","index.js"],"names":["PageHeader","className","axios","get","SortIcon","props","onClick","clickSortIcon","TableHeader","scope","TableRow","key","src","picture","alt","name","phone","email","dob","Table","employees","map","employee","index","Search","useState","setEmployees","employeeList","setEmployeeList","sortState","setSortState","compareAZ","a","b","nameA","nameB","comparison","compareZA","useEffect","RandomUser","then","res","employeesArray","data","results","forEach","employeeObj","thumbnail","first","last","year","split","month","day","formatDate","date","push","onChange","event","console","log","target","value","search","searchedEmployee","filter","includes","sortedEmployees","sort","App","ReactDOM","render","document","getElementById"],"mappings":"mSAGe,SAASA,IACtB,OACE,6BACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,8CACb,wBAAIA,UAAU,gBAAd,yB,mCCNK,EAEI,WAEf,OAAOC,IAAMC,IADD,2E,iBCDD,SAASC,EAASC,GAC/B,OACE,kBAAC,IAAD,CACAJ,UAAU,cACVK,QAASD,EAAME,gBCJJ,SAASC,EAAYH,GAElC,OACE,+BACE,4BACE,wBAAII,MAAM,YAAV,SACA,wBAAIA,MAAM,YAAV,OACA,kBAACL,EAAD,CACAG,cAAeF,EAAME,iBAGrB,wBAAIE,MAAM,YAAV,SACA,wBAAIA,MAAM,YAAV,SACA,wBAAIA,MAAM,YAAV,SCfO,SAASC,EAASL,GAE/B,OACE,wBACEM,IAAKN,EAAMM,KAEX,4BACE,yBACEC,IAAKP,EAAMQ,QACXC,IAAKT,EAAMU,QAEf,4BAAKV,EAAMU,MACX,4BAAKV,EAAMW,OACX,4BAAKX,EAAMY,OACX,4BAAKZ,EAAMa,MCZF,SAASC,EAAMd,GAE5B,OACE,yBAAKJ,UAAU,YACb,2BAAOA,UAAU,uBACf,kBAACO,EAAD,CACED,cAAeF,EAAME,gBAGtBF,EAAMe,UAAUC,KAAI,SAACC,EAAUC,GAAX,OACnB,kBAACb,EAAD,CACEG,QAASS,EAAST,QAClBE,KAAMO,EAASP,KACfC,MAAOM,EAASN,MAChBC,MAAOK,EAASL,MAChBC,IAAKI,EAASJ,IACdP,IAAKY,S,MCdF,SAASC,IAAS,MAEGC,mBAAS,IAFZ,mBAExBL,EAFwB,KAEbM,EAFa,OAISD,mBAAS,IAJlB,mBAIxBE,EAJwB,KAIVC,EAJU,OAKGH,oBAAS,GALZ,mBAKxBI,EALwB,KAKbC,EALa,KAiCzBC,EAAY,SAACC,EAAGC,GACpB,IAAMC,EAAQF,EAAEjB,KACVoB,EAAQF,EAAElB,KAEZqB,EAAa,EAMjB,OALIF,EAAQC,EACVC,EAAa,EACJF,EAAQC,IACjBC,GAAc,GAETA,GAGHC,EAAY,SAACJ,EAAGD,GACpB,IAAME,EAAQF,EAAEjB,KACVoB,EAAQF,EAAElB,KAEZqB,EAAa,EAMjB,OALIF,EAAQC,EACVC,EAAa,EACJF,EAAQC,IACjBC,GAAc,GAETA,GAuDT,OA/BAE,qBAAU,WAERC,IACGC,MAAK,SAACC,GACL,IAAIC,EAAiB,GAErBD,EAAIE,KAAKC,QAAQC,SAAQ,SAAAvB,GACvB,IAMIwB,EAAc,CAChBjC,QAPcS,EAAST,QAAQkC,UAQ/BhC,KAPY,UAAMO,EAASP,KAAKiC,MAApB,YAA6B1B,EAASP,KAAKkC,MAQvDjC,MAPYM,EAASN,MAQrBC,MAPYK,EAASL,MAQrBC,IA7ES,SAACA,GAGlB,IAAIgC,GADJhC,GADAA,EAAMA,EAAIiC,MAAM,KAAK,IACXA,MAAM,MACD,GACXC,EAAQlC,EAAI,GACZmC,EAAMnC,EAAI,GAEd,MAAM,GAAN,OAAUkC,EAAV,YAAmBC,EAAnB,YAA0BH,GA+DRI,CAAWhC,EAASJ,IAAIqC,OAUpCb,EAAec,KAAKV,MAItBpB,EAAagB,GACbd,EAAgBc,QAGnB,IAGD,yBAAKzC,UAAU,iBACb,yBAAKA,UAAU,YACb,0BAAMA,UAAU,QACd,2BACAwD,SA7GkB,SAACC,GACzBC,QAAQC,IAAIF,EAAMG,OAAOC,OACzB,IAAIC,EAASL,EAAMG,OAAOC,MAGpBE,EAAmB5C,EAAU6C,QAAO,YAExC,OAFsD,EAAXlD,KAE/BmD,SAASH,MAGvBnC,EAAgBoC,MAqGV,4BAAQ/D,UAAU,6BAAlB,YAKN,kBAACkB,EAAD,CACAC,UAAWO,EACXpB,cAhEoB,SAACmD,GAErB,GAAK7B,GAOE,GAAIA,EAAU,CACnB,IAAMsC,EAAkB,YAAI/C,GAAWgD,KAAK/B,GAC5CsB,QAAQC,IAAI,oBAAqBO,GAEjCvC,EAAgBuC,GAChBrC,GAAa,QAZA,CAEb,IAAMqC,EAAkB,YAAI/C,GAAWgD,KAAKrC,GAC5C4B,QAAQC,IAAI,oBAAqBO,GAEjCvC,EAAgBuC,GAChBrC,GAAa,Q,MC7DJuC,MATf,WACE,OACE,6BACE,kBAACrE,EAAD,MACA,kBAACwB,EAAD,QCHN8C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5f31b786.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nexport default function PageHeader() {\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"page-header text-center text-light bg-dark\">\n          <h1 className=\"align-middle\">Employee Directory</h1>\n        </div>\n      </div>\n    </div>\n  );\n}","import axios from \"axios\";\n\nexport default {\n\n  getAllEmployees: function() {\n    const url = \"https://randomuser.me/api/?results=20&inc=picture,name,phone,email,dob\";\n    return axios.get(url);\n  }\n};\n  ","import React from 'react';\nimport SortByAlphaIcon from '@material-ui/icons/SortByAlpha';\n\n\nexport default function SortIcon(props) {\n  return(\n    <SortByAlphaIcon\n    className=\"float-right\"\n    onClick={props.clickSortIcon}\n    />\n  );\n}\n\n","import React from 'react';\nimport SortIcon from '../SortIcon';\n\n\nexport default function TableHeader(props) {\n\n  return(\n    <thead>\n      <tr>\n        <th scope=\"col-md-1\">Photo</th>\n        <th scope=\"col-md-3\">Name\n        <SortIcon \n        clickSortIcon={props.clickSortIcon}\n        />\n        </th>\n        <th scope=\"col-md-3\">Phone</th>\n        <th scope=\"col-md-3\">Email</th>\n        <th scope=\"col-md-2\">DOB</th>\n      </tr>\n    </thead>\n  );\n}","import React from 'react';\n\nexport default function TableRow(props) {\n\n  return (\n    <tr\n      key={props.key}\n    >\n      <td>\n        <img\n          src={props.picture}\n          alt={props.name} />\n      </td>\n      <td>{props.name}</td>\n      <td>{props.phone}</td>\n      <td>{props.email}</td>\n      <td>{props.dob}</td>\n    </tr>\n  );\n}","import React from 'react';\nimport TableHeader from '../TableHeader';\nimport TableRow from '../TableRow';\n\nexport default function Table(props) {\n\n  return (\n    <div className=\"col mt-4\">\n      <table className=\"table table-striped\">\n        <TableHeader\n          clickSortIcon={props.clickSortIcon}\n        />\n        {/* second parameter gives access to unique key */}\n        {props.employees.map((employee, index) => (\n          <TableRow\n            picture={employee.picture}\n            name={employee.name}\n            phone={employee.phone}\n            email={employee.email}\n            dob={employee.dob}\n            key={index}\n          />\n        ))}\n      </table>\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport RandomUser from '../../utils/RandomUser';\nimport Table from \"../Table\";\nimport './style.css';\n\n\nexport default function Search() {\n  // Populate the table with a list of 20 employees when the page loads/Keeps the array of employees you had before modifying the search so you don't lose employees\n  const [employees, setEmployees] = useState([]);\n  // Used to make copies of original list when modified\n  const [employeeList, setEmployeeList] = useState([]);\n  const [sortState, setSortState] = useState(false);\n  \n  const handleInputChange = (event) => {\n    console.log(event.target.value);\n    let search = event.target.value;\n\n    // use object destructuring to pull out the name from the employee\n    const searchedEmployee = employees.filter(({ name }) => {\n      // \"includes\" automatically evaluates either to True or False\n      return name.includes(search);\n    })\n\n    setEmployeeList(searchedEmployee);\n  }\n\n  // Modify the dob to be a more readable format\n  const formatDate = (dob) => {\n    dob = dob.split(\"T\")[0];\n    dob = dob.split(\"-\");\n    let year = dob[0];\n    let month = dob[1];\n    let day = dob[2];\n    \n    return `${month}/${day}/${year}`;\n  }\n\n  // Since the employees array is full of objects, use a compare function for sorting by just names\n  // Sort A-Z\n  const compareAZ = (a, b) => {\n    const nameA = a.name;\n    const nameB = b.name;\n  \n    let comparison = 0;\n    if (nameA > nameB) {\n      comparison = 1;\n    } else if (nameA < nameB) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n  // Sort Z-A\n  const compareZA = (b, a) => {\n    const nameA = a.name;\n    const nameB = b.name;\n  \n    let comparison = 0;\n    if (nameA > nameB) {\n      comparison = 1;\n    } else if (nameA < nameB) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n  \n\n  // Click handler for sort icon\n  const clickSortIcon = (event) => {\n    // if statement allows user to click sort icon to toggle between A-Z & Z-A sort\n    if (!sortState){\n      // Make a copy of our current employee array to perform sort method on\n      const sortedEmployees = [...employees].sort(compareAZ);\n      console.log(\"sorted employees:\", sortedEmployees);\n\n      setEmployeeList(sortedEmployees);\n      setSortState(true);\n    } else if (sortState){\n      const sortedEmployees = [...employees].sort(compareZA);\n      console.log(\"sorted employees:\", sortedEmployees);\n\n      setEmployeeList(sortedEmployees);\n      setSortState(false);  \n    }\n  }\n  \n\n  useEffect(() => {\n\n    RandomUser.getAllEmployees()\n      .then((res) => {\n        let employeesArray = [];\n\n        res.data.results.forEach(employee => {\n          const picture = employee.picture.thumbnail;\n          const fullName = `${employee.name.first} ${employee.name.last}`;\n          const phone = employee.phone;\n          const email = employee.email;\n          const dob = formatDate(employee.dob.date);\n    \n          let employeeObj = {\n            picture: picture,\n            name: fullName,\n            phone: phone,\n            email: email,\n            dob: dob\n          };\n\n          employeesArray.push(employeeObj);\n        \n        });\n\n        setEmployees(employeesArray);\n        setEmployeeList(employeesArray);\n      });\n\n  }, []);\n\n  return (\n    <div className=\"container p-4\">\n      <div className=\"form-div\">\n        <form className=\"mt-4\">\n          <input\n          onChange={handleInputChange}\n          ></input>\n          <button className=\"btn btn-outline-secondary\">\n            Search\n            </button>\n        </form>\n      </div>\n    <Table \n    employees={employeeList} \n    clickSortIcon={clickSortIcon}\n    />\n    </div>\n  );\n}\n","import React from 'react';\nimport PageHeader from './components/PageHeader';\nimport Search from './components/Search';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <PageHeader />\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}